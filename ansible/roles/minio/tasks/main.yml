---
- name: Create MinIO storage directory
  file:
    path: /mnt/minio-storage/
    state: directory
    mode: '0777'

- name: Get Kubernetes node name
  command: kubectl get nodes -o jsonpath='{.items[0].metadata.name}'
  register: k8s_node_name
  changed_when: false
  environment:
    KUBECONFIG: "/root/.kube/config"

- name: Debug - Kubernetes node name for MinIO PV
  debug:
    var: k8s_node_name.stdout

- name: Create minio namespace
  kubernetes.core.k8s:
    name: minio
    api_version: v1
    kind: Namespace
    state: present
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Deploy MinIO PersistentVolume
  kubernetes.core.k8s:
    state: present
    src: "{{ role_path }}/templates/minio-pv.yml.j2"
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Deploy MinIO PersistentVolumeClaim
  kubernetes.core.k8s:
    state: present
    src: "{{ role_path }}/files/minio-pvc.yml"
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Wait for MinIO PVC to be bound
  kubernetes.core.k8s_info:
    kind: PersistentVolumeClaim
    name: minio-pvc
    namespace: minio
    wait: yes
    wait_condition: Bound
    wait_timeout: 300
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Render MinIO deployment template
  template:
    src: "{{ role_path }}/templates/minio-deployment.yml.j2"
    dest: "/tmp/minio-deployment.yml"

- name: Deploy MinIO
  kubernetes.core.k8s:
    state: present
    src: "/tmp/minio-deployment.yml"
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Debug - Get MinIO deployment info
  command: kubectl get deployment minio-deployment -n minio -o json
  register: minio_deployment_info
  changed_when: false
  failed_when: false
  environment:
    KUBECONFIG: "{{ ansible_user_dir }}/.kube/config"

- name: Debug - Print MinIO deployment info
  debug:
    var: minio_deployment_info.stdout

- name: Wait for MinIO deployment to be ready
  kubernetes.core.k8s_info:
    kind: Deployment
    name: minio-deployment
    namespace: minio
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Get MinIO pods
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: minio
    label_selectors:
      - app=minio
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"
  register: minio_pods

- name: Fail if MinIO pods are not running
  fail:
    msg: "MinIO pods are not running"
  when: minio_pods.resources | length == 0 or minio_pods.resources[0].status.phase != 'Running' or not minio_pods.resources[0].status.containerStatuses[0].ready
