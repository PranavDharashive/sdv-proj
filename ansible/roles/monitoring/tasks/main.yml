---
- name: Debug - Get Kubernetes nodes info
  command: kubectl get nodes -o json
  register: kubectl_get_nodes_output
  changed_when: false
  failed_when: false

- name: Debug - Print Kubernetes nodes info
  debug:
    var: kubectl_get_nodes_output.stdout

- name: Create monitoring namespace
  kubernetes.core.k8s:
    name: monitoring
    api_version: v1
    kind: Namespace
    state: present
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Deploy Node Exporter DaemonSet
  kubernetes.core.k8s:
    state: present
    src: "{{ playbook_dir }}/../k8s-manifests/node-exporter-daemonset.yml"
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Deploy Node Exporter Service
  kubernetes.core.k8s:
    state: present
    src: "{{ playbook_dir }}/../k8s-manifests/node-exporter-service.yml"
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Deploy Kube-State-Metrics ServiceAccount
  kubernetes.core.k8s:
    state: present
    src: "{{ playbook_dir }}/../k8s-manifests/kube-state-metrics-serviceaccount.yml"
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Deploy Kube-State-Metrics ClusterRole
  kubernetes.core.k8s:
    state: present
    src: "{{ playbook_dir }}/../k8s-manifests/kube-state-metrics-clusterrole.yml"
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Deploy Kube-State-Metrics ClusterRoleBinding
  kubernetes.core.k8s:
    state: present
    src: "{{ playbook_dir }}/../k8s-manifests/kube-state-metrics-clusterrolebinding.yml"
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Deploy Kube-State-Metrics Deployment
  kubernetes.core.k8s:
    state: present
    src: "{{ playbook_dir }}/../k8s-manifests/kube-state-metrics-deployment.yml"
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Deploy Kube-State-Metrics Service
  kubernetes.core.k8s:
    state: present
    src: "{{ playbook_dir }}/../k8s-manifests/kube-state-metrics-service.yml"
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Deploy Kube-State-Metrics Service
  kubernetes.core.k8s:
    state: present
    src: "{{ playbook_dir }}/../k8s-manifests/kube-state-metrics-service.yml"
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Deploy Prometheus ClusterRole
  kubernetes.core.k8s:
    state: present
    src: "{{ playbook_dir }}/../k8s-manifests/prometheus-clusterrole.yml"
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Deploy Prometheus ClusterRoleBinding
  kubernetes.core.k8s:
    state: present
    src: "{{ playbook_dir }}/../k8s-manifests/prometheus-clusterrolebinding.yml"
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Get Kubernetes node name
  command: kubectl get nodes -o jsonpath='{.items[0].metadata.name}'
  register: k8s_node_name
  changed_when: false
  environment:
    KUBECONFIG: "{{ ansible_user_dir }}/.kube/config"

- name: Create prometheus-data directory
  file:
    path: /mnt/prometheus-data
    state: directory
    mode: '0755'

- name: Create grafana-data directory
  file:
    path: /mnt/grafana-data
    state: directory
    mode: '0755'

- name: Render Prometheus PersistentVolume template
  template:
    src: "{{ role_path }}/templates/prometheus-pv.yml.j2"
    dest: "/tmp/prometheus-pv.yml"

- name: Deploy Prometheus PV
  kubernetes.core.k8s:
    state: present
    src: "/tmp/prometheus-pv.yml"
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Deploy Prometheus PVC
  kubernetes.core.k8s:
    state: present
    src: "{{ role_path }}/files/prometheus-pvc.yml"
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Render Grafana PersistentVolume template
  template:
    src: "{{ role_path }}/templates/grafana-pv.yml.j2"
    dest: "/tmp/grafana-pv.yml"

- name: Deploy Grafana PV
  kubernetes.core.k8s:
    state: present
    src: "/tmp/grafana-pv.yml"
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Deploy Grafana PVC
  kubernetes.core.k8s:
    state: present
    src: "{{ role_path }}/files/grafana-pvc.yml"
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Deploy Prometheus
  kubernetes.core.k8s:
    state: present
    src: "{{ role_path }}/files/prometheus-deployment.yml"
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Deploy Kube-State-Metrics Service
  kubernetes.core.k8s:
    state: present
    src: "{{ playbook_dir }}/../k8s-manifests/kube-state-metrics-service.yml"
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Deploy Prometheus ConfigMap
  kubernetes.core.k8s:
    state: present
    src: "{{ role_path }}/files/prometheus-config.yml"
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Deploy Grafana
  kubernetes.core.k8s:
    state: present
    src: "{{ role_path }}/files/grafana-deployment.yml"
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Deploy Grafana Datasources ConfigMap
  kubernetes.core.k8s:
    state: present
    src: "{{ role_path }}/files/grafana-datasources.yml"
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Render Grafana Dashboards ConfigMap template
  template:
    src: "{{ role_path }}/templates/grafana-dashboards-configmap.yml.j2"
    dest: "/tmp/grafana-dashboards-configmap.yml"

- name: Deploy Grafana Dashboards ConfigMap
  kubernetes.core.k8s:
    state: present
    src: "/tmp/grafana-dashboards-configmap.yml"
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Debug - Get Prometheus deployment info
  command: kubectl get deployment prometheus-deployment -n monitoring -o json
  register: prometheus_deployment_info
  changed_when: false
  failed_when: false
  environment:
    KUBECONFIG: "{{ ansible_user_dir }}/.kube/config"

- name: Debug - Print Prometheus deployment info
  debug:
    var: prometheus_deployment_info.stdout

- name: Wait for Prometheus pods to be ready
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: monitoring
    label_selectors:
      - app=prometheus
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Debug - Prometheus pods info
  debug:
    var: prometheus_pods

- name: Wait for Grafana pods to be ready
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: monitoring
    label_selectors:
      - app=grafana
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Debug - Grafana pods info
  debug:
    var: grafana_pods
