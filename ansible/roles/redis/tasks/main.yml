---
- name: Create sdv namespace
  kubernetes.core.k8s:
    name: sdv
    api_version: v1
    kind: Namespace
    state: present
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Deploy Redis
  kubernetes.core.k8s:
    state: present
    src: "{{ role_path }}/files/redis-deployment.yml"
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Debug - Get Redis deployment info
  command: kubectl get deployment redis-deployment -n sdv -o json
  register: redis_deployment_info
  changed_when: false
  failed_when: false
  environment:
    KUBECONFIG: "{{ ansible_user_dir }}/.kube/config"

- name: Debug - Print Redis deployment info
  debug:
    var: redis_deployment_info.stdout

- name: Wait for Redis deployment to be ready
  kubernetes.core.k8s_info:
    kind: Deployment
    name: redis-deployment
    namespace: sdv
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"

- name: Get Redis pods
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: sdv
    label_selectors:
      - app=redis
    kubeconfig: "{{ ansible_user_dir }}/.kube/config"
  register: redis_pods

- name: Debug - Redis pods info
  debug:
    var: redis_pods

- name: Get Redis pod events
  command: kubectl describe pod {{ redis_pods.resources[0].metadata.name }} -n sdv
  register: redis_pod_events
  changed_when: false
  failed_when: false
  environment:
    KUBECONFIG: "{{ ansible_user_dir }}/.kube/config"
  when: redis_pods.resources | length > 0

- name: Debug - Redis pod events
  debug:
    var: redis_pod_events.stdout_lines
  when: redis_pods.resources | length > 0

- name: Fail if Redis pods are not running
  fail:
    msg: "Redis pods are not running"
  when: redis_pods.resources | length == 0 or redis_pods.resources[0].status.phase != 'Running' or not redis_pods.resources[0].status.containerStatuses[0].ready
