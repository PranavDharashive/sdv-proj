---
- name: Initialize the Kubernetes cluster using kubeadm
  command: kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address={{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }} --kubernetes-version {{ k8s_version }}
  args:
    creates: /etc/kubernetes/admin.conf

- name: Setup kubeconfig for user
  file:
    path: "$HOME/.kube"
    state: directory
    mode: '0755'

- name: Copy admin.conf to user's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "{{ ansible_user_dir }}/.kube/config"
    remote_src: yes
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: '0644'

- name: Verify kubeconfig file permissions and ownership
  stat:
    path: "{{ ansible_user_dir }}/.kube/config"
  register: kubeconfig_stat

- name: Debug - Kubeconfig file stats
  debug:
    var: kubeconfig_stat

- name: Debug - Kubeconfig file content
  command: cat "{{ ansible_user_dir }}/.kube/config"
  register: kubeconfig_content
  changed_when: false
  no_log: true

- name: Debug - Print Kubeconfig content
  debug:
    var: kubeconfig_content.stdout

- name: Install Calico CNI
  command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
  args:
    creates: /etc/cni/net.d/calico-kubeconfig

- name: Check if control-plane taint exists
  command: kubectl get nodes {{ ansible_hostname }} -o jsonpath='{.spec.taints}'
  register: node_taints
  changed_when: false
  failed_when: false

- name: Untaint control-plane node for single node cluster
  command: kubectl taint nodes {{ ansible_hostname }} node-role.kubernetes.io/control-plane:NoSchedule-
  when: 
    - inventory_hostname == ansible_hostname
    - node_taints.stdout is search('node-role.kubernetes.io/control-plane:NoSchedule')
